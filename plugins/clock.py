"""
    Here's a simple analog clock that apparently most people don't understand.

    TODO: add multiple clock layouts (digital, binary, etc.).
"""

import time
from datetime import datetime
import backend.plugin
from backend.constants import *

pxl = [ 0,
        LP_BTN_YLW,
        LP_BTN_RED,
        LP_BTN_GRN,
        LP_BTN_RED0,
        LP_BTN_RED1,
        LP_BTN_RED ]

bin_frames = [
    [ [0,0,0,0,0,0,0,0],    # 00
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,0],    # 0
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,2,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,0],    # 0
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,2,0,0,0], 
      [0,0,0,0,2,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,0],    # 0
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,2,0,0,0], 
      [0,0,0,2,2,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,0],    # 0
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,2,2,0,0,0], 
      [0,0,0,2,2,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,0],    # 0
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,0],    # 0
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,0],    # 0
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,0],    # 0
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,0],    # 0
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,0],    # 00
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,0],    # 00
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ]
    ];

dig_frames = [
    [ [0,1,1,0],
      [1,0,0,1],
      [1,0,0,1],
      [0,1,1,0] ],
    
    [ [0,0,1,0],
      [0,1,1,0],
      [0,0,1,0],
      [0,0,1,0] ],

    [ [0,1,1,0],
      [1,0,0,1],
      [0,0,1,0],
      [0,1,1,1] ],

    [ [0,1,1,0],
      [0,0,1,1],
      [0,0,0,1],
      [0,1,1,0] ],

    [ [0,1,0,1],
      [0,1,1,1],
      [0,0,0,1],
      [0,0,0,1] ],

    [ [1,1,1,1],
      [1,1,0,0],
      [0,0,1,1],
      [1,1,1,0] ],

    [ [0,1,1,1],
      [1,0,0,0],
      [1,0,1,1],
      [0,1,1,0] ],

    [ [0,1,1,1],
      [0,0,0,1],
      [0,0,1,0],
      [0,0,1,0] ],

    [ [0,1,1,0],
      [1,1,1,1],
      [1,0,0,1],
      [0,1,1,0] ],

    [ [0,1,1,0],
      [1,1,1,1],
      [0,0,0,1],
      [1,1,1,0] ] ];

alg_frames = [
    [ [0,0,0,0,0,0,3,3],    # 12
      [0,0,0,0,0,3,3,3], 
      [0,0,0,0,0,1,3,0], 
      [0,0,0,0,4,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,2],    # 1
      [0,0,0,0,0,0,2,3], 
      [0,0,0,0,0,1,3,3], 
      [0,0,0,0,5,1,3,3], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,2],    # 2
      [0,0,0,0,0,0,2,2], 
      [0,0,0,0,0,1,2,2], 
      [0,0,0,0,6,1,2,2], 
      [0,0,0,0,0,1,3,3], 
      [0,0,0,0,0,0,3,3], 
      [0,0,0,0,0,0,0,3], 
      [0,0,0,0,0,0,0,0], ],

    [ [0,0,0,0,0,0,0,2],    # 3
      [0,0,0,0,0,0,2,2], 
      [0,0,0,0,0,1,2,2], 
      [0,0,0,0,6,1,2,2], 
      [0,0,0,0,4,1,2,2], 
      [0,0,0,0,0,1,3,2], 
      [0,0,0,0,0,3,3,3], 
      [0,0,0,0,0,0,3,3], ],

    [ [0,0,0,0,0,0,0,2],    # 4
      [0,0,0,0,0,0,2,2], 
      [0,0,0,0,0,1,2,2], 
      [0,0,0,0,6,1,2,2], 
      [0,0,0,0,5,1,2,2], 
      [0,0,0,0,1,1,2,2], 
      [0,0,0,0,3,3,2,2], 
      [0,0,0,0,3,3,3,2], ],

    [ [0,0,0,0,0,0,0,2],    # 5
      [0,0,0,0,0,0,2,2], 
      [0,0,0,0,0,1,2,2], 
      [0,0,0,0,6,1,2,2], 
      [0,0,0,0,6,1,2,2], 
      [0,0,0,1,1,1,2,2], 
      [0,0,3,3,2,2,2,2], 
      [0,3,3,3,2,2,2,2], ],

    [ [0,0,0,0,0,0,0,2],    # 6
      [0,0,0,0,0,0,2,2], 
      [0,0,0,0,0,1,2,2], 
      [0,0,0,0,6,1,2,2], 
      [0,0,0,4,6,1,2,2], 
      [0,3,1,1,1,1,2,2], 
      [3,3,3,2,2,2,2,2], 
      [3,3,2,2,2,2,2,2], ],

    [ [0,0,0,0,0,0,0,2],    # 7
      [0,0,0,0,0,0,2,2], 
      [0,0,0,0,0,1,2,2], 
      [0,0,0,0,6,1,2,2], 
      [3,3,1,5,6,1,2,2], 
      [3,3,1,1,1,1,2,2], 
      [3,2,2,2,2,2,2,2], 
      [2,2,2,2,2,2,2,2], ],

    [ [0,0,0,0,0,0,0,2],    # 8
      [3,0,0,0,0,0,2,2], 
      [3,3,0,0,0,1,2,2], 
      [3,3,1,0,6,1,2,2], 
      [2,2,1,6,6,1,2,2], 
      [2,2,1,1,1,1,2,2], 
      [2,2,2,2,2,2,2,2], 
      [2,2,2,2,2,2,2,2], ],

    [ [3,3,0,0,0,0,0,2],    # 9
      [3,3,3,0,0,0,2,2], 
      [2,3,1,0,0,1,2,2], 
      [2,2,1,4,6,1,2,2], 
      [2,2,1,6,6,1,2,2], 
      [2,2,1,1,1,1,2,2], 
      [2,2,2,2,2,2,2,2], 
      [2,2,2,2,2,2,2,2], ],

    [ [2,3,3,3,0,0,0,2],    # 10
      [2,2,3,3,0,0,2,2], 
      [2,2,1,1,0,1,2,2], 
      [2,2,1,5,6,1,2,2], 
      [2,2,1,6,6,1,2,2], 
      [2,2,1,1,1,1,2,2], 
      [2,2,2,2,2,2,2,2], 
      [2,2,2,2,2,2,2,2], ],

    [ [2,2,2,2,3,3,3,2],    # 11
      [2,2,2,2,3,3,2,2], 
      [2,2,1,1,1,1,2,2], 
      [2,2,1,6,6,1,2,2], 
      [2,2,1,6,6,1,2,2], 
      [2,2,1,1,1,1,2,2], 
      [2,2,2,2,2,2,2,2], 
      [2,2,2,2,2,2,2,2], ]
    ];

class Plugin(backend.plugin.Plugin):
    def __init__(self, dev, args):
        backend.plugin.Plugin.__init__(self, dev, args);
        self.grid = [ [0]*8 for i in xrange(8) ];

    def run(self):
        backend.plugin.Plugin.run(self);

        self.dbuf = LP_DBC_ENB | LP_DBC_CPY | LP_DBC_B0U | LP_DBC_B1D;
        self.dev.write_short(LP_ADDR_CTRL, LP_REGS_DBUF, self.dbuf);
        self.dbuf = self.dbuf ^ ( LP_DBC_B1U | LP_DBC_B1D );

        while self.enabled:
            _ = [ alg_frames[datetime.now().hour % 12], 
                        alg_frames[(datetime.now().minute/5) % 12],
                        alg_frames[(datetime.now().second) % 12] ];

            for y in xrange(8):
                for x in xrange(8):
                    if x >= 3 and x <= 4 and y >= 3 and y <= 4:
                        self.grid[y][x] = pxl[_[2][y][x]];

                    elif x >= 2 and x <= 5 and y >= 2 and y <= 5:
                        self.grid[y][x] = pxl[_[0][y][x]];

                    else:
                        self.grid[y][x] = pxl[_[1][y][x]];

            self.showgrid(self.grid);
            time.sleep(1);
